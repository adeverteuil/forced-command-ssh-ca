#!/bin/bash
#
# ssh-ca

. /etc/ssh-ca.conf

run_id="$(uuid)"
user_id="${SUDO_USER:-$USER}"

function log_debug() {
    echo "$(date "+%F %T") ${run_id} ${*}" >> /var/log/ssh-ca/debug.log
}

function log_output() {
    log_debug "CALL ${*}"
    output="$("${@}" 2>&1)"
    log_debug "OUTPUT ${output}"
}

function log_certificate() {
    ssh-keygen -L -f "${cert}" >> /var/log/ssh-ca/signatures.log
}

function sign_user_key() {
    mkdir -p /tmp/ssh-ca
    principals="${SSH_ORIGINAL_COMMAND#* }"
    pubkey="/tmp/ssh-ca/${run_id}.pub"
    cert="/tmp/ssh-ca/${run_id}-cert.pub"
    cat > "${pubkey}"
    ca_key="/usr/local/lib/ssh-ca/${SSH_CA_KEY}"
    serial="$(date +%s)"
    validity="${SSH_CA_CERTIFICATE_VALIDITY}"
    if [ -n "${SSH_CA_CERTIFICATE_OPTIONS}" ]; then
        options=" -O ${SSH_CA_CERTIFICATE_OPTIONS}"
    else
        options=""
    fi
    log_output ssh-keygen \
        -P "" \
        -s "/usr/local/lib/ssh-ca/${SSH_CA_KEY}" \
        -I "${user_id}" \
        -V "${validity}"${options} \
        -n "${principals}" \
        -z "${serial}" \
        "${pubkey}"
    log_certificate
    cat "${cert}"
    rm "${pubkey}"
    rm "${cert}"
}

function sign_host_key() {
    mkdir -p /tmp/ssh-ca
    principals="${SSH_ORIGINAL_COMMAND#* }"
    pubkey="/tmp/ssh-ca/${run_id}.pub"
    cert="/tmp/ssh-ca/${run_id}-cert.pub"
    cat > "${pubkey}"
    ca_key="/usr/local/lib/ssh-ca/${SSH_CA_KEY}"
    validity="+365d"
    log_output ssh-keygen \
        -P "" \
        -s "/usr/local/lib/ssh-ca/${SSH_CA_KEY}" \
        -h \
        -I "${SSH_CA_KEY}" \
        -V "${validity}" \
        -n "${principals}" \
        "${pubkey}"
    cat "${cert}"
    log_certificate
    rm "${pubkey}"
    rm "${cert}"
}

log_debug "SSH_ORIGINAL_COMMAND ${SSH_ORIGINAL_COMMAND}"
subcommand=${SSH_ORIGINAL_COMMAND% *}
case "${subcommand}" in
    user)
        sign_user_key
        ;;
    host)
        sign_host_key
        ;;
    config)
        echo SSH_ORIGINAL_COMMAND=$SSH_ORIGINAL_COMMAND
        echo USER=$user_id
        echo SSH_CA_KEY=$SSH_CA_KEY
        echo SSH_CA_CERTIFICATE_VALIDITY=$SSH_CA_CERTIFICATE_VALIDITY
        echo SSH_CA_CERTIFICATE_OPTIONS=$SSH_CA_CERTIFICATE_OPTIONS
        ;;
esac
