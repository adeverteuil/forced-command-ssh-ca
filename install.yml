---
- hosts: ssh-ca

  tasks:

    - name: install required packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - ntp
        - uuid

    - name: create the sshca user
      user:
        name: sshca
        system: yes
        createhome: no

    - name: install ssh-ca
      copy:
        src: ssh-ca
        dest: /usr/local/bin/ssh-ca
        owner: sshca
        group: sshca
        mode: 0750

    - name: configure ssh-ca
      template:
        src: ssh-ca.conf.j2
        dest: /etc/ssh-ca.conf

    - name: configure sshd
      template:
        src: sshd_config.j2
        dest: /etc/ssh/sshd_config
      notify: restart ssh

    - name: create the CA directory
      file:
        dest: /usr/local/lib/ssh-ca
        state: directory
        owner: sshca
        group: sshca
        mode: 0700

    - name: install CA secret keys
      copy:
        content: "{{ item.secret }}"
        dest: /usr/local/lib/ssh-ca/{{ item.name }}
        owner: sshca
        group: sshca
        mode: 0600
      with_items: "{{ ssh_ca_keypairs }}"
      no_log: True

    - name: install CA public keys
      copy:
        content: "{{ item.public }}"
        dest: /usr/local/lib/ssh-ca/{{ item.name }}.pub
        owner: sshca
        group: sshca
        mode: 0640
      with_items: "{{ ssh_ca_keypairs }}"
      no_log: True

    - name: stat the key specified in ssh_ca_configuration.use_ca_key
      stat:
        path: /usr/local/lib/ssh-ca/{{ ssh_ca_configuration.use_ca_key }}
      register: stat_key

    - name: assert that use_ca_key is set to the name of an ssh_ca_keypairs item
      assert:
        that: stat_key.stat.exists
        msg: "{{ ssh_ca_configuration.use_ca_key }} is not a key defined in ssh_ca_keypairs"

    - name: create the log directory
      file:
        dest: /var/log/ssh-ca
        state: directory
        owner: sshca
        group: sshca
        mode: 0750

    - name: find all the host keys
      command: sed -n '/^HostKey/s/^HostKey *//p' /etc/ssh/sshd_config
      register: host_keys
      check_mode: no
      changed_when: no

    - name: sign the host keys
      command: ssh-keygen -s "/usr/local/lib/ssh-ca/{{ ssh_ca_configuration.use_ca_key }}"
        -h
        -P ""
        -I "{{ ssh_ca_configuration.use_ca_key }}"
        -V "-1h:+365d"
        -n "{{ ansible_eth0.ipv4.address }},{{ ansible_fqdn }}{% for principal in ssh_ca_configuration.additional_host_principals|default([]) %},{{ principal }}{% endfor %}"
        -z "{{ ansible_date_time.epoch }}"
        "{{ item }}.pub"
      args:
        creates: "{{ item }}-cert.pub"
      with_items: "{{ host_keys.stdout_lines }}"
      notify: restart ssh

  handlers:

    - name: restart ssh
      service:
        name: ssh
        state: restarted
